output <- plot + theme_bw()
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) #+ # sorts plots by species and scenario
output <- plot + theme_bw()
for(i in 1:n_pages(plot)){
p_save <-  output +
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4, page = i)
ggsave(plot = p_save, filename = paste0('~s/page_', i, '.jpg'))
}
n_pages_plot
n_pages(plot)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) #+ # sorts plots by species and scenario
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4)
n_pages(plot)
output <- plot + theme_bw()
output
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4)
output <- plot + theme_bw()
for(i in 1:n_pages(plot)){
p_save <-  output +
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4, page = i)
ggsave(plot = p_save, filename = paste0('~/page_', i, '.jpg'))
}
setwd("E:/KA/temp/RyeTest")
for(i in 1:n_pages(plot)){
p_save <-  output +
facet_wrap_paginate(~ species + iteration, ncol = 4, nrow = 4, page = i)
ggsave(plot = p_save, filename = paste0('~/page_', i, '.jpg'))
}
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) #+ # sorts plots by species and scenario
library("readxl")
library("dplyr")
library("ggplot2")
library("ggforce")
library("gridextra")
setwd("E:/KA/temp/RyeTest")
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Charleroi_test2.xlsx", sheet = "summary")
head(sheet)
summary(sheet)
# fetch number of units by looking for columns of num_entrained
columns <- grep("entrained|killed", colnames(sheet), value = TRUE)
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, mean)
# group entire sheet by iteration/scenario/species
stats <- sheet %>% group_by(iteration, scenario, species) %>%
summarize(population = (pop_size),
entrained = (`num_entrained_Charleroi U1`),
killed = (`num_killed_Charleroi U1`))
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) #+ # sorts plots by species and scenario
plot + theme_bw()
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 4)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 4)
plot + theme_bw()
distinct(stats_group$scenario)
distinct(stat_group$scenario)
unique(stat_group$scenario)
length(unique(stat_group$scenario))
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot + theme_bw()
View(stats)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot + theme_bw()
View(sheet)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained), log10="y") + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot + theme_bw()
geom_histogram() +
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(log10(stats$entrained))) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes[log10(stats$entrained)]) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot +
scale_y_continuous(trans = "log10")
plot +
scale_y_continuous(trans = "log10") +
theme_bw()
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aeslog10(stats$entrained)]) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count (log10)", x = "Daily Number of Fish Entrained") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot +
scale_y_continuous(trans = "log10") +
theme_bw()
plot +
scale_x_continuous(trans = "log10") +
theme_bw()
# plot daily count of entrained fish by iteration
plot <- ggplot(data=stats, aes(stats$entrained)) + # pulls the entrained values
geom_histogram() +
labs(title = "Entrained Fish by Species, Scenario",
#subtitle = "",
y = "Count", x = "Daily Number of Fish Entrained (log10)") +
#facet_wrap(~species+scenario, labeller = label_both) + # sorts plots by species and scenario
facet_wrap_paginate(~ species + scenario, ncol = 4, nrow = 3)
plot +
scale_x_continuous(trans = "log10") +
theme_bw()
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
scenarios <- unique(sheet$scenario)
species
library("readxl")
library("dplyr")
library("ggplot2")
library("ggforce")
setwd("E:/KA/temp/RyeTest")
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Allegheny.xlsx", sheet = "summary")
head(sheet)
summary(sheet)
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
scenarios <- unique(sheet$scenario)
species
scenarios
# fetch number of units by looking for columns of num_entrained
columns <- grep("entrained|killed", colnames(sheet), value = TRUE)
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, median, max)
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, median)
stat_group
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, median, sum)
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, median)
stat_group
stats <- sheet %>% group_by(iteration, species, scenario)# %>%
stats
stats
View(stats)
summarise_at(funs(sum = sum(.,na.rm=TRUE)),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE))
stats <- sheet %>% group_by(species, scenario) %>%
summarise_at(funs(sum = sum(.,na.rm=TRUE)),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE))
stats <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE)),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE))
stats <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
View(stats)
stats <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
View(stats)
write.csv(stats2, directory + "\\stats2.csv", row.names = TRUE)
stats2 <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
write.csv(stats2, directory + "\\stats2.csv", row.names = TRUE)
# export tables to csv
directory <-getwd()
directory
write.csv(stats1, directory + "\\stats1.csv", row.names = TRUE)
write.csv(stats2, directory + "\\stats2.csv", row.names = TRUE)
write.csv(stats2, str(directory + "\\stats2.csv"), row.names = TRUE)
df1<-df[-which(duplicated(sheet[,])),]
uniques <- sheet[!duplicated(sheet), ]
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Allegheny.xlsx", sheet = "summary")
head(sheet)
summary(sheet)
sheet[1]
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Allegheny.xlsx", sheet = "summary")
drop_index <- sheet[1]
uniques <- drop_index[!duplicated(sheet), ]
drop_index <- sheet[-c(1)]
uniques <- drop_index[!duplicated(sheet), ]
View(uniques)
#drop_index <- sheet[-c(1)]
uniques <- sheet[!duplicated(sheet$length_max), ]
View(uniques)
#drop_index <- sheet[-c(1)]
uniques2 <- sheet[!duplicated(sheet$length_min), ]
#drop_index <- sheet[-c(1)]
uniques2 <- sheet[!duplicated(sheet$length_median), ]
#drop_index <- sheet[-c(1)]
uniques2 <- sheet[!duplicated(sheet$length_min), ]
uniques3 <- sheet[!(duplicated(sheet) | duplicated(sheet, fromLast = TRUE)), ]
uniques3 <- drop_index[!(duplicated(drop_index) | duplicated(drop_index, fromLast = TRUE)), ]
drop_index <- sheet[-c(1)]
uniques3 <- drop_index[!(duplicated(drop_index) | duplicated(drop_index, fromLast = TRUE)), ]
View(uniques3)
!sheet
sheet
sheet %>% distinct()
drop_index %>% distinct()
# add data xlsx output from stryke script
sheet_import <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Allegheny.xlsx", sheet = "summary")
drop_index <- sheet[-c(1)]
sheet <- drop_index %>% distinct()
head(sheet)
summary(sheet)
View(sheet)
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
scenarios <- unique(sheet$scenario)
# fetch number of units by looking for columns of num_entrained
columns <- grep("entrained|killed", colnames(sheet), value = TRUE)
stats1 <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
stats2 <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
# use group_by to pull relevant stats - add min, max, median
stats <- sheet %>% group_by(iteration, species, scenario)# %>%
# use group_by to pull relevant stats - add min, max, median
stats <- sheet %>% group_by(iteration, species, scenario) %>%
summarise_all(population = sum(pop_size),
entrained = sum(.,),
killed = sum(`num_killed_Charleroi U1`))
# use group_by to pull relevant stats - add min, max, median
stats <- sheet %>% group_by(iteration, species, scenario) %>%
summarise_all(population = sum(pop_size),
entrained = sum(.,),
killed = sum(.,))
stat_group <- sheet %>% group_by(species, scenario) %>%
summarize_at(columns, median)
stat_group
View(stat_group)
entrained <- grep("entrained", colnames(sheet), value = TRUE)
median_entrained <- sheet %>% group_by(species, scenario) %>%
summarize_at(entrained, median)
View(median_entrained)
# use group_by to pull relevant stats - add min, max, median
stats <- sheet %>% group_by(iteration, species, scenario) %>%
summarise_all(population = sum(pop_size),
entrained = sum(.,),
killed = sum(.,))
stats1 <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
stats2 <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
View(stats1)
# export tables to csv
directory <-getwd()
write.csv(median_entrained, "E:\\KA\\temp\\RyeTest\\median_entrained.csv", row.names = TRUE)
# table of median daily entrainment by species and scenario
max_entrained <- sheet %>% group_by(species, scenario) %>%
summarize_at(entrained, max)
View(max_entrained)
write.csv(max_entrained, "E:\\KA\\temp\\RyeTest\\max_entrained.csv", row.names = TRUE)
# table of sum entrained and sum killed by species and scenario
sum_entrained_killed <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
# table of sum entrained and sum killed by ONLY scenario
sum_scenario <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
# table of sum entrained and sum killed by ONLY scenario
sum_scenario_only <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
write.csv(sum_entrained_killed, "E:\\KA\\temp\\RyeTest\\sum_entrained_killed.csv", row.names = TRUE)
write.csv(sum_scenario_only, "E:\\KA\\temp\\RyeTest\\sum_scenario_only.csv", row.names = TRUE)
write.csv(median_entrained, "E:\\KA\\temp\\RyeTest\\Allegheny\\median_entrained.csv", row.names = TRUE)
write.csv(median_entrained, "E:\\KA\\temp\\RyeTest\\Allegheny\\median_entrained.csv", row.names = TRUE)
write.csv(max_entrained, "E:\\KA\\temp\\RyeTest\\Allegheny\\max_entrained.csv", row.names = TRUE)
write.csv(sum_entrained_killed, "E:\\KA\\temp\\RyeTest\\Allegheny\\sum_entrained_killed.csv", row.names = TRUE)
write.csv(sum_scenario_only, "E:\\KA\\temp\\RyeTest\\Allegheny\\sum_scenario_only.csv", row.names = TRUE)
source("E:/KA/temp/RyeTest/RyeTables.R")
# add data xlsx output from stryke script
sheet_import <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Emsworth.xlsx", sheet = "summary")
drop_index <- sheet[-c(1)]
sheet <- drop_index %>% distinct()
head(sheet)
summary(sheet)
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
sheet_import
sheet
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Emsworth.xlsx", sheet = "summary")
head(sheet)
summary(sheet)
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
scenarios <- unique(sheet$scenario)
# fetch number of units by looking for columns of num_entrained
columns <- grep("entrained|killed", colnames(sheet), value = TRUE)
entrained <- grep("entrained", colnames(sheet), value = TRUE)
# table of MEDIAN daily entrainment by species and scenario
median_entrained <- sheet %>% group_by(species, scenario) %>%
summarize_at(entrained, median)
# table of MAX daily entrainment by species and scenario
max_entrained <- sheet %>% group_by(species, scenario) %>%
summarize_at(entrained, max)
# table of sum entrained and sum killed by species and scenario
sum_entrained_killed <- sheet %>% group_by(species, scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
# table of sum entrained and sum killed by ONLY scenario
sum_scenario_only <- sheet %>% group_by(scenario) %>%
summarise_at(columns, funs(sum = sum(.,na.rm=TRUE),
median = median(.,na.rm=TRUE),
max = max(.,na.rm=TRUE)))
# export tables to csv
directory <-getwd()
write.csv(median_entrained, "E:\\KA\\temp\\RyeTest\\Emsworth\\median_entrained.csv", row.names = TRUE)
write.csv(max_entrained, "E:\\KA\\temp\\RyeTest\\Emsworth\\max_entrained.csv", row.names = TRUE)
write.csv(sum_entrained_killed, "E:\\KA\\temp\\RyeTest\\Emsworth\\sum_entrained_killed.csv", row.names = TRUE)
write.csv(sum_scenario_only, "E:\\KA\\temp\\RyeTest\\Emsworth\\sum_scenario_only.csv", row.names = TRUE)
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Montgomery.xlsx", sheet = "summary")
library("readxl")
library("dplyr")
library("ggplot2")
library("ggforce")
setwd("E:/KA/temp/RyeTest")
# add data xlsx output from stryke script
sheet <- read_excel("E:\\KA\\temp\\RyeTest\\Rye_Stryke_Montgomery.xlsx", sheet = "summary")
head(sheet)
summary(sheet)
# pull unique valuesfor species, scenarios
species <- unique(sheet$species)
scenarios <- unique(sheet$scenario)
# fetch number of units by looking for columns of num_entrained
columns <- grep("entrained|killed", colnames(sheet), value = TRUE)
entrained <- grep("entrained", colnames(sheet), value = TRUE)
#sheet_fit <- sheet[-c(1)]
fit_values <- sheet %>% group_by(species("Gizzard Shad"), scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
#sheet_fit <- sheet[-c(1)]
killed <- grep("killed", colnames(sheet), value = TRUE)
fit_values <- sheet %>% group_by(species("Gizzard Shad"), scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
fit_values <- sheet %>% group_by(species = "Gizzard Shad", scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
species_interest <- species[1]
species_interest <- species[0]
species_interest <- species[1]
# how to select one value from the species list easily?
fit_values <- sheet %>% group_by(species_interest, scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
# how to select one value from the species list easily?
fit_values <- group_by(species_interest, scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
# how to select one value from the species list easily?
fit_values <- group_by(species, scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
# how to select one value from the species list easily?
fit_values <- sheet %>% group_by(species, scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
scenarios <- unique(sheet$scenario)
# how to select one value from the species list easily?
fit_values <- sheet %>% group_by(species, scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
# how to select one value from the species list easily?
fit_values <- sheet %>% group_by(species, scenario) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
# how to select one value from the species list easily?
fit_values <- sheet %>% group_by(species, scenario) %>%
summarise_at(killed, funs(sum = sum(.,na.rm=TRUE)))
# how to select one value from the species list easily?
fit_values <- group_by(sheet,species[1], scenario) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
filter(sheet, species = "Emerald Shiner")
filter(sheet, species == "Emerald Shiner")
species[3]
species_of_interest <- filter(sheet, species == species[3])
View(species_of_interest)
fit_values <- species_of_interest %>% group_by(scenarios) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
fit_values <- species_of_interest %>% group_by(scenario) %>%
summarise_at(killed, sum = sum(.,na.rm=TRUE))
fit_values <- species_of_interest %>% group_by(scenario) %>%
summarise_at(killed, median)
fit_values <- species_of_interest %>% group_by(scenario) %>%
summarise_at(killed, median)
View(fit_values)
fit_values <- species_of_interest %>% group_by(species, scenario) %>%
summarise_at(killed, median)
View(fit_values)
fit_values <- species_of_interest %>% group_by(species, scenario) %>%
summarise_at(killed, max)
View(fit_values)
View(fit_values)
species_of_interest <- filter(sheet, species == species[3])
species[3]
#pull a single species -
species_of_interest <- filter(sheet, species == species[1])
species_of_interest
# create table of summary killed per scenario
fit_values <- species_of_interest %>% group_by(species, scenario) %>%
summarise_at(killed, sum)
View(fit_values)
for (i in 1:length(species)) {
species_of_interest <- filter(sheet, species == species[i])
fit_values <- species_of_interest %>% group_by(species, scenario) %>%
summarise_at(killed, sum)
}
View(fit_values)
print(fit_values)
for (i in 1:length(species)) {
species_of_interest <- filter(sheet, species == species[i])
fit_values <- species_of_interest %>% group_by(species, scenario) %>%
summarise_at(killed, sum)
print(fit_values)
}
species[i]
length(species)
